"""
This type stub file was generated by pyright.
"""

import abc
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives._asymmetric import AsymmetricPadding as AsymmetricPadding
from cryptography.hazmat.primitives.asymmetric import rsa

class PKCS1v15(AsymmetricPadding):
    name = ...


class _MaxLength:
    "Sentinel value for `MAX_LENGTH`."
    ...


class _Auto:
    "Sentinel value for `AUTO`."
    ...


class _DigestLength:
    "Sentinel value for `DIGEST_LENGTH`."
    ...


class PSS(AsymmetricPadding):
    MAX_LENGTH = ...
    AUTO = ...
    DIGEST_LENGTH = ...
    name = ...
    _salt_length: int | _MaxLength | _Auto | _DigestLength
    def __init__(self, mgf: MGF, salt_length: int | _MaxLength | _Auto | _DigestLength) -> None:
        ...
    
    @property
    def mgf(self) -> MGF:
        ...
    


class OAEP(AsymmetricPadding):
    name = ...
    def __init__(self, mgf: MGF, algorithm: hashes.HashAlgorithm, label: bytes | None) -> None:
        ...
    
    @property
    def algorithm(self) -> hashes.HashAlgorithm:
        ...
    
    @property
    def mgf(self) -> MGF:
        ...
    


class MGF(metaclass=abc.ABCMeta):
    _algorithm: hashes.HashAlgorithm
    ...


class MGF1(MGF):
    MAX_LENGTH = ...
    def __init__(self, algorithm: hashes.HashAlgorithm) -> None:
        ...
    


def calculate_max_pss_salt_length(key: rsa.RSAPrivateKey | rsa.RSAPublicKey, hash_algorithm: hashes.HashAlgorithm) -> int:
    ...

